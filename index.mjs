// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.1.0-esm/index.mjs";import{isPrimitive as o}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import{isPrimitive as a}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-max@v0.1.1-esm/index.mjs";import{factory as p}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-uniform@v0.1.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@v0.1.1-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function f(g,v,c){var b,x,y,w,N;if(!o(g)||m(g))throw new TypeError(j("invalid argument. First argument must be a number and not NaN. Value: `%s`.",g));if(!o(v)||m(v))throw new TypeError(j("invalid argument. Second argument must be a number and not NaN. Value: `%s`.",v));if(g>=v)throw new RangeError(j("invalid argument. Minimum support must be less than maximum support. Value: `[%f, %f]`.",g,v));if(arguments.length>2){if(!d(c))throw new TypeError(j("invalid argument. Options argument must be an object. Value: `%s`.",c));if(b=i({},c),l(b,"iter")){if(!a(b.iter))throw new TypeError(j("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","iter",b.iter))}else b.iter=u;y=p(g,v,b),void 0===b.prng&&!1!==b.copy&&(b.state=y.state)}else y=p(g,v),b={iter:u,state:y.state};return N=0,e(x={},"next",L),e(x,"return",P),b&&b.prng?(e(x,"seed",null),e(x,"seedLength",null),n(x,"state",s(null),r),e(x,"stateLength",null),e(x,"byteLength",null)):(t(x,"seed",G),t(x,"seedLength",E),n(x,"state",O,F),t(x,"stateLength",T),t(x,"byteLength",V)),e(x,"PRNG",y.PRNG),h&&e(x,h,R),x;function L(){return N+=1,w||N>b.iter?{done:!0}:{value:y(),done:!1}}function P(e){return w=!0,arguments.length?{value:e,done:!0}:{done:!0}}function R(){return f(g,v,b)}function G(){return y.PRNG.seed}function E(){return y.PRNG.seedLength}function T(){return y.PRNG.stateLength}function V(){return y.PRNG.byteLength}function O(){return y.PRNG.state}function F(e){y.PRNG.state=e}}export{f as default};
//# sourceMappingURL=index.mjs.map
